{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"newItem\"];\nexport class HeaderComponent {\n  constructor() {\n    this.newItemEvent = new EventEmitter();\n  }\n  addNewItem(value) {\n    this.newItemEvent.emit(value);\n    this.inputValue.nativeElement.value = '';\n  }\n}\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)();\n};\nHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"app-header\"]],\n  viewQuery: function HeaderComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputValue = _t.first);\n    }\n  },\n  outputs: {\n    newItemEvent: \"newItemEvent\"\n  },\n  decls: 7,\n  vars: 0,\n  consts: [[1, \"header\"], [\"type\", \"text\", \"placeholder\", \"Write your todo list here...\", 1, \"todo-input\"], [\"newItem\", \"\"], [1, \"btn-add\", 3, \"click\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"ToDo List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"input\", 1, 2);\n      i0.ɵɵelementStart(5, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_5_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(4);\n        return i0.ɵɵresetView(ctx.addNewItem(_r0.value));\n      })(\"click\", function HeaderComponent_Template_button_click_5_listener() {\n        return ctx.handleClear();\n      });\n      i0.ɵɵtext(6, \"Add\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","HeaderComponent","constructor","newItemEvent","addNewItem","value","emit","inputValue","nativeElement","selectors","viewQuery","HeaderComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","HeaderComponent_Template_button_click_5_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","handleClear"],"sources":["C:\\Users\\ganevg\\Desktop\\Coding\\Angular\\Services - RxJS\\todo-exercise\\src\\app\\header\\header.component.ts","C:\\Users\\ganevg\\Desktop\\Coding\\Angular\\Services - RxJS\\todo-exercise\\src\\app\\header\\header.component.html"],"sourcesContent":["import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  \n  @ViewChild('newItem') inputValue:any;\n  @Output() newItemEvent = new EventEmitter<string>;\n\n  addNewItem(value: string) {\n    this.newItemEvent.emit(value);\n    this.inputValue.nativeElement.value = '';\n  }\n\n}\n","<div class=\"header\">\n    <h1>ToDo List</h1>\n    <input type=\"text\" class=\"todo-input\" placeholder=\"Write your todo list here...\" #newItem>\n    <button (click)=\"addNewItem(newItem.value)\" (click)=\"handleClear()\" class=\"btn-add\">Add</button>\n</div>\n"],"mappings":"AAAA,SAA4BA,YAAY,QAAmB,eAAe;;;AAO1E,OAAM,MAAOC,eAAe;EAL5BC,YAAA;IAQY,KAAAC,YAAY,GAAG,IAAIH,YAAoB,CAApB,CAAoB;;EAEjDI,UAAUA,CAACC,KAAa;IACtB,IAAI,CAACF,YAAY,CAACG,IAAI,CAACD,KAAK,CAAC;IAC7B,IAAI,CAACE,UAAU,CAACC,aAAa,CAACH,KAAK,GAAG,EAAE;EAC1C;;AARWJ,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;QAAfA,eAAe;EAAAQ,SAAA;EAAAC,SAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;;MCP5BE,EAAA,CAAAC,cAAA,aAAoB;MACZD,EAAA,CAAAE,MAAA,gBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAClBH,EAAA,CAAAI,SAAA,kBAA0F;MAC1FJ,EAAA,CAAAC,cAAA,gBAAoF;MAA5ED,EAAA,CAAAK,UAAA,mBAAAC,iDAAA;QAAAN,EAAA,CAAAO,aAAA,CAAAC,GAAA;QAAA,MAAAC,GAAA,GAAAT,EAAA,CAAAU,WAAA;QAAA,OAASV,EAAA,CAAAW,WAAA,CAAAZ,GAAA,CAAAT,UAAA,CAAAmB,GAAA,CAAAlB,KAAA,CAAyB;MAAA,EAAC,mBAAAe,iDAAA;QAAA,OAAUP,GAAA,CAAAa,WAAA,EAAa;MAAA,EAAvB;MAAyCZ,EAAA,CAAAE,MAAA,UAAG;MAAAF,EAAA,CAAAG,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}